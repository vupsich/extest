"""add bookings relationship

Revision ID: a6f54698c805
Revises: 84cda9692fa7
Create Date: 2025-01-05 17:03:11.468153

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a6f54698c805'
down_revision: Union[str, None] = '84cda9692fa7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('review')
    op.drop_table('statistic')
    op.create_index(op.f('ix_booking_booking_id'), 'booking', ['booking_id'], unique=False)
    op.alter_column('customer', 'customer_phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.drop_constraint('customer_customer_email_key', 'customer', type_='unique')
    op.create_index(op.f('ix_customer_customer_id'), 'customer', ['customer_id'], unique=False)
    op.create_unique_constraint(None, 'customer', ['customer_phone'])
    op.drop_column('customer', 'customer_email')
    op.drop_column('customer', 'registration_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('customer', sa.Column('registration_date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('customer', sa.Column('customer_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'customer', type_='unique')
    op.drop_index(op.f('ix_customer_customer_id'), table_name='customer')
    op.create_unique_constraint('customer_customer_email_key', 'customer', ['customer_email'])
    op.alter_column('customer', 'customer_phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_index(op.f('ix_booking_booking_id'), table_name='booking')
    op.create_table('statistic',
    sa.Column('statistic_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('excursion_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_bookings', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('average_rating', sa.NUMERIC(precision=3, scale=2), server_default=sa.text('0.0'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['excursion_id'], ['excursion.excursion_id'], name='statistic_excursion_id_fkey'),
    sa.PrimaryKeyConstraint('statistic_id', name='statistic_pkey')
    )
    op.create_table('review',
    sa.Column('review_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('excursion_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('review_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('review_comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('review_date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint('review_rating >= 1 AND review_rating <= 5', name='review_review_rating_check'),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], name='review_customer_id_fkey'),
    sa.ForeignKeyConstraint(['excursion_id'], ['excursion.excursion_id'], name='review_excursion_id_fkey'),
    sa.PrimaryKeyConstraint('review_id', name='review_pkey')
    )
    # ### end Alembic commands ###
